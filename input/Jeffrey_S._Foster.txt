Professor: Jeffrey S. Foster
University: Tufts University
URL: http://www.cs.umd.edu/~jfoster
Description: Jeff Foster
Home
Recent Papers
Teaching
Students
Activities
Software
Papers
Jeff Foster
Professor and Chair
Department of Computer Science
Tufts University
420 Joyce Cummings Center, 177 College Ave, Medford, MA 02155
✉jeffrey.foster@tufts.edu
☎Please email instead of calling


I am Professor and Chair of the Department of Computer Science at Tufts University. I am also Chair of SIGPLAN. The goal of my research is to develop fundamental new ways to make it easier to build more reliable, secure software. I am interested in programming languages, software engineering, and security. I am a member of TuPL. I am an ACM Fellow.

Previously, I was a Professor in the Department of Computer Science and UMIACS at the University of Maryland, College Park, as well as a member of PLUM.

Warning: There are ongoing phishing attempts with messages that purport to come from me. Often the scammers say they are offering research positions, or that I need your help checking equipment prices in a store. They will often ask you to contact a phone number or an email address that is not my official Tufts address. (Sometimes the link will look like my address, but if you click on it, you'll see the "to" field goes somewhere else.) If I contact you, I will always ask you to respond to my Tufts email address (see above), and never via phone, text, WhatsApp, etc. If you have any questions about a message you received that is supposedly from me, you can contact me by email to confirm. If you do receive a scam email, please forward it to Tufts IT Support, and if the message was from a gmail account, you can report abuse from a gmail account.

Recent Papers
A Qualitative Study of REST API Design and Specification Practices - VL/HCC 2023
Absynthe: Abstract Interpretation-Guided Synthesis - PLDI 2023
A Toolkit for Automated Testing of Dafny - NFM 2023
An Empirical Assessment of Machine Learning Approaches for Triaging Reports of Static Analysis Tools - EMSE 2023
SATune: A Study-Driven Auto-Tuning Approach for Configurable Software Verification Tools - ASE 2021
SimTyper: Sound Type Inference for Ruby using Type Equality Prediction - PACMPL OOPSLA 2021
Program Sketching by Automatically Generating Mocks from Tests - CAV 2021
RbSyn: Type- and Effect-Guided Program Synthesis - PLDI 2021
Sound, Heuristic Type Annotation Inference for Ruby - DLS 2020
An Observational Investigation of Reverse Engineers' Processes - USENIX SEC 2020
«more...»
All publications
Teaching
CS 121, Software Engineering - Sp19, Sp20, Sp21, Fa21, Fa22, Fa23
COMP 105, Programming Languages - Fa19
COMP 150-AVS, Program Analysis, Verification, and Synthesis - Fa18
CMSC 430, Introduction to Compilers - Sp12, Fa12, Fa13, Fa14, Fa15, Fa16
CMSC 498L, Cybersecurity Lab - Fa12
CMSC 330, Organization of Programming Languages - Fa05, Fa06, Fa08, Fa09, Sp11, Fa17
CMSC 631, Program Analysis and Understanding - Fa03, Fa04, Sp06, Sp09, Fa10, Sp13
CMSC 433, Programming Languages Technologies and Paradigms - Sp03, Sp04, Sp05
CMSC 838F, Language-Based Security - Sp08
CMSC 838F, Language-Based Techniques for Concurrent and Distributed Software - Sp07
Students and Post-Docs
Current
Mark Aldrich (PhD)
Sasha Fedchin (PhD)
Fox Huston (PhD)
Nate Bragg (PhD)
Former
Sankha Guria (PhD) - Program Synthesis with Lightweight Abstractions
Shambwaditya Saha (postdoc)
Milod Kazerounian (PhD) - Towards More Expressive and Usable Types for Dynamic Languages
Ugur Koc (PhD) - Improving the Usability of Static Analysis Tools Using Machine Learning
Brianna Ren (PhD) - Type Checking and Inference for Dynamic Languages
Ben Mariano (MS)
Kristopher Micinski (PhD) - Interaction-Based Security for Mobile Apps
ThanhVu Nguyen (postdoc)
Nikos Kofinas (MS)
Jinseong Jeon (PhD) - Framework Synthesis for Symbolic Execution of Event-Driven Frameworks
Matthew Hammer (postdoc)
Karla Saur (PhD) - Dynamic Upgrades for High Availability Systems
Stevie Strickland (postdoc)
Yit Phang Khoo (PhD) - User-centered Program Analysis Tools
Chris Hayden (PhD) - Clear, Correct, and Efficient Dynamic Software Updates
David An (MS) - Dynamic Inference of Static Types for Ruby
Evan Chang (postdoc)
Avik Chaudhuri (postdoc)
Mike Furr (PhD) - Combining Static and Dynamic Typing in Ruby
David Greenfieldboyce (MS)
Nicholas Kuilema (MS)
Kin-Keung (Martin) Ma (PhD) - Improving Program Testing and Understanding via Symbolic Execution
Jeff Meister (Undergrad)
Polyvios Pratikakis (PhD) - Sound, Precise and Efficient Static Race Detection for Multi-threaded Programs
Elnatan Reisner (MS)
Saurabh Srivastava (PhD) - Satisfiability-Based Program Reasoning and Synthesis
Recent Professional Activities
SOAP 2020 Program Committee
POPL 2020 Program Committee
PLDI 2018 General Chair
PLDI 2017 Program Committee
ICSE 2017 Program Committee
OOPSLA 2016 External Review Committee
POPL 2016 External Review Committee
SOAP 2015 Program Committee
ICSE 2015 Program Committee
POPL 2015 Program Committee
PLDI 2014 Program Committee
ESEC/FSE 2013 New Ideas Track Program Committee
HotSWUp 2013 Co-chair
PLDI 2013 External Review Committee
Recent Software
RDL - Types and contracts for Ruby
Talks - A web app to manage talks

